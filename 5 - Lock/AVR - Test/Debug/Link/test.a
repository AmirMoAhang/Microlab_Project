;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <eeprom.h>
;
;
;char check();
;
;void main(void)
; 0000 0008 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0009 
; 0000 000A     DDRD = 0xFF;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 000B     PORTD = 0x00;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 000C 
; 0000 000D     DDRB = 0xFF;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 000E     PORTB = 0x00;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 000F 
; 0000 0010     PORTD = check();
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0011     eeprom_write_byte(0, 128);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0012     PORTB = check();
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0013 
; 0000 0014     while(1)
;PCODE: $0000001D VOL: 0
; 0000 0015     {
; 0000 0016 
; 0000 0017     }
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0018 
; 0000 0019 }
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;
;char check()
; 0000 001C {
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 001D     char test;
; 0000 001E     test = eeprom_read_byte(0);
;PCODE: $00000025 VOL: 0
;	test -> R17
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 001F     return test;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0020 }
;PCODE: $0000002C VOL: 0
