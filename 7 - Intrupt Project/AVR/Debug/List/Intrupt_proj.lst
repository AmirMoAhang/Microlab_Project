
AVRASM ver. 2.1.30  D:\uni\Term 11\Microlab\7 - Intrupt Project\AVR\Debug\List\Intrupt_proj.asm Mon Dec 23 09:32:30 2024

D:\uni\Term 11\Microlab\7 - Intrupt Project\AVR\Debug\List\Intrupt_proj.asm(1086): warning: Register r4 already defined by the .DEF directive
D:\uni\Term 11\Microlab\7 - Intrupt Project\AVR\Debug\List\Intrupt_proj.asm(1087): warning: Register r5 already defined by the .DEF directive
D:\uni\Term 11\Microlab\7 - Intrupt Project\AVR\Debug\List\Intrupt_proj.asm(1088): warning: Register r6 already defined by the .DEF directive
D:\uni\Term 11\Microlab\7 - Intrupt Project\AVR\Debug\List\Intrupt_proj.asm(1089): warning: Register r7 already defined by the .DEF directive
D:\uni\Term 11\Microlab\7 - Intrupt Project\AVR\Debug\List\Intrupt_proj.asm(1090): warning: Register r8 already defined by the .DEF directive
D:\uni\Term 11\Microlab\7 - Intrupt Project\AVR\Debug\List\Intrupt_proj.asm(1091): warning: Register r9 already defined by the .DEF directive
D:\uni\Term 11\Microlab\7 - Intrupt Project\AVR\Debug\List\Intrupt_proj.asm(1092): warning: Register r10 already defined by the .DEF directive
D:\uni\Term 11\Microlab\7 - Intrupt Project\AVR\Debug\List\Intrupt_proj.asm(1093): warning: Register r11 already defined by the .DEF directive
D:\uni\Term 11\Microlab\7 - Intrupt Project\AVR\Debug\List\Intrupt_proj.asm(1094): warning: Register r13 already defined by the .DEF directive
D:\uni\Term 11\Microlab\7 - Intrupt Project\AVR\Debug\List\Intrupt_proj.asm(1095): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _milisec=R4
                 	.DEF _milisec_msb=R5
                 	.DEF _sec=R6
                 	.DEF _sec_msb=R7
                 	.DEF _min=R8
                 	.DEF _min_msb=R9
                 	.DEF _hour=R10
                 	.DEF _hour_msb=R11
                 	.DEF _stop=R13
                 	.DEF __lcd_x=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c02c      	RJMP __RESET
000001 c057      	RJMP _stopStart
000002 c05b      	RJMP _reset
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _tbl10_G101:
000013 2710
000014 03e8
000015 0064
000016 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000017 0001      	.DB  0x1,0x0
                 _tbl16_G101:
000018 1000
000019 0100
00001a 0010
00001b 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00001c 3025
00001d 6432
00001e 3a20
00001f 2520      	.DB  0x25,0x30,0x32,0x64,0x20,0x3A,0x20,0x25
000020 3230
000021 2064
000022 203a
000023 3025      	.DB  0x30,0x32,0x64,0x20,0x3A,0x20,0x25,0x30
000024 6432
000025 2e20
000026 2520
000027 0064      	.DB  0x32,0x64,0x20,0x2E,0x20,0x25,0x64,0x0
                 _0x2000003:
000028 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000029 0002      	.DW  0x02
00002a 0170      	.DW  __base_y_G100
00002b 0050      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
00002c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00002d 94f8      	CLI
00002e 27ee      	CLR  R30
00002f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000030 e0f1      	LDI  R31,1
000031 bffb      	OUT  GICR,R31
000032 bfeb      	OUT  GICR,R30
000033 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000034 e08d      	LDI  R24,(14-2)+1
000035 e0a2      	LDI  R26,2
000036 27bb      	CLR  R27
                 __CLEAR_REG:
000037 93ed      	ST   X+,R30
000038 958a      	DEC  R24
000039 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00003a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00003b e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00003c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00003d 93ed      	ST   X+,R30
00003e 9701      	SBIW R24,1
00003f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000040 e5e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000041 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000042 9185      	LPM  R24,Z+
000043 9195      	LPM  R25,Z+
000044 9700      	SBIW R24,0
000045 f061      	BREQ __GLOBAL_INI_END
000046 91a5      	LPM  R26,Z+
000047 91b5      	LPM  R27,Z+
000048 9005      	LPM  R0,Z+
000049 9015      	LPM  R1,Z+
00004a 01bf      	MOVW R22,R30
00004b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00004c 9005      	LPM  R0,Z+
00004d 920d      	ST   X+,R0
00004e 9701      	SBIW R24,1
00004f f7e1      	BRNE __GLOBAL_INI_LOOP
000050 01fb      	MOVW R30,R22
000051 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000052 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000053 bfed      	OUT  SPL,R30
000054 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000055 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000056 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000057 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000058 c01f      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;
                 ;unsigned int milisec;
                 ;unsigned int sec;
                 ;unsigned int min;
                 ;unsigned int hour;
                 ;
                 ;unsigned char stop;
                 ;unsigned char buffer[16];
                 ;
                 ;interrupt [2] void stopStart(void)
                 ; 0000 000F {
                 
                 	.CSEG
                 _stopStart:
                 ; .FSTART _stopStart
000059 d276      	RCALL SUBOPT_0x0
                 ; 0000 0010     stop = !stop;
00005a 2ded      	MOV  R30,R13
00005b d2ff      	RCALL __LNEGB1
00005c 2ede      	MOV  R13,R30
                 ; 0000 0011     delay_ms(200);
00005d c00a      	RJMP _0x14
                 ; 0000 0012 
                 ; 0000 0013 }
                 ; .FEND
                 ;
                 ;interrupt [3] void reset(void)
                 ; 0000 0016 {
                 _reset:
                 ; .FSTART _reset
00005e d271      	RCALL SUBOPT_0x0
                 ; 0000 0017     if(stop == 1)
00005f e0e1      	LDI  R30,LOW(1)
000060 15ed      	CP   R30,R13
000061 f431      	BRNE _0x3
                 ; 0000 0018     {
                 ; 0000 0019         milisec = sec = min = 0;
000062 e0e0      	LDI  R30,LOW(0)
000063 e0f0      	LDI  R31,HIGH(0)
000064 014f      	MOVW R8,R30
000065 013f      	MOVW R6,R30
000066 012f      	MOVW R4,R30
                 ; 0000 001A         sprintf(buffer, "%02d : %02d : %02d . %d", hour, min, sec, milisec/100);
000067 d276      	RCALL SUBOPT_0x1
                 ; 0000 001B         //"00 : 00 : 00 . 0"
                 ; 0000 001C         lcd_clear();
                 ; 0000 001D         lcd_gotoxy(0, 0);
                 ; 0000 001E         lcd_puts(buffer);
                 ; 0000 001F     }
                 ; 0000 0020     delay_ms(200);
                 _0x3:
                 _0x14:
000068 eca8      	LDI  R26,LOW(200)
000069 d29a      	RCALL SUBOPT_0x2
                 ; 0000 0021 }
00006a 91e9      	LD   R30,Y+
00006b bfef      	OUT  SREG,R30
00006c 91f9      	LD   R31,Y+
00006d 91e9      	LD   R30,Y+
00006e 91b9      	LD   R27,Y+
00006f 91a9      	LD   R26,Y+
000070 9199      	LD   R25,Y+
000071 9189      	LD   R24,Y+
000072 9179      	LD   R23,Y+
000073 9169      	LD   R22,Y+
000074 90f9      	LD   R15,Y+
000075 9019      	LD   R1,Y+
000076 9009      	LD   R0,Y+
000077 9518      	RETI
                 ; .FEND
                 ;
                 ;void main() {
                 ; 0000 0023 void main() {
                 _main:
                 ; .FSTART _main
                 ; 0000 0024 
                 ; 0000 0025 
                 ; 0000 0026     DDRD = 0x00;
000078 e0e0      	LDI  R30,LOW(0)
000079 bbe1      	OUT  0x11,R30
                 ; 0000 0027     PORTD = 0xFF;
00007a efef      	LDI  R30,LOW(255)
00007b bbe2      	OUT  0x12,R30
                 ; 0000 0028 
                 ; 0000 0029     GICR = 0b11000000;
00007c ece0      	LDI  R30,LOW(192)
00007d bfeb      	OUT  0x3B,R30
                 ; 0000 002A     MCUCR = 0b00001010;
00007e e0ea      	LDI  R30,LOW(10)
00007f bfe5      	OUT  0x35,R30
                 ; 0000 002B 
                 ; 0000 002C     #asm("sei")
000080 9478      	sei
                 ; 0000 002D 
                 ; 0000 002E     lcd_init(16);
000081 e1a0      	LDI  R26,LOW(16)
000082 d09a      	RCALL _lcd_init
                 ; 0000 002F     lcd_clear();
000083 d060      	RCALL _lcd_clear
                 ; 0000 0030 
                 ; 0000 0031     while(1)
                 _0x4:
                 ; 0000 0032     {
                 ; 0000 0033         while(stop == 1);
                 _0x7:
000084 e0e1      	LDI  R30,LOW(1)
000085 15ed      	CP   R30,R13
000086 f3e9      	BREQ _0x7
                 ; 0000 0034 
                 ; 0000 0035         if (stop != 1)
000087 15ed      	CP   R30,R13
000088 f179      	BREQ _0xA
                 ; 0000 0036         {
                 ; 0000 0037             delay_ms(100);
000089 e6a4      	LDI  R26,LOW(100)
00008a d279      	RCALL SUBOPT_0x2
                 ; 0000 0038 
                 ; 0000 0039             if(milisec == 900)
00008b e8e4      	LDI  R30,LOW(900)
00008c e0f3      	LDI  R31,HIGH(900)
00008d 15e4      	CP   R30,R4
00008e 05f5      	CPC  R31,R5
00008f f521      	BRNE _0xB
                 ; 0000 003A             {
                 ; 0000 003B                 milisec = 0;
000090 2444      	CLR  R4
000091 2455      	CLR  R5
                 ; 0000 003C                 if(sec == 59)
000092 e3eb      	LDI  R30,LOW(59)
000093 e0f0      	LDI  R31,HIGH(59)
000094 15e6      	CP   R30,R6
000095 05f7      	CPC  R31,R7
000096 f4c9      	BRNE _0xC
                 ; 0000 003D                 {
                 ; 0000 003E                     sec = 0;
000097 2466      	CLR  R6
000098 2477      	CLR  R7
                 ; 0000 003F                     if(min == 60)
000099 e3ec      	LDI  R30,LOW(60)
00009a e0f0      	LDI  R31,HIGH(60)
00009b 15e8      	CP   R30,R8
00009c 05f9      	CPC  R31,R9
00009d f471      	BRNE _0xD
                 ; 0000 0040                     {
                 ; 0000 0041                         min = 0;
00009e 2488      	CLR  R8
00009f 2499      	CLR  R9
                 ; 0000 0042                         if(hour == 99)
0000a0 e6e3      	LDI  R30,LOW(99)
0000a1 e0f0      	LDI  R31,HIGH(99)
0000a2 15ea      	CP   R30,R10
0000a3 05fb      	CPC  R31,R11
0000a4 f419      	BRNE _0xE
                 ; 0000 0043                         {
                 ; 0000 0044                             hour = 0;
0000a5 24aa      	CLR  R10
0000a6 24bb      	CLR  R11
                 ; 0000 0045                         }
                 ; 0000 0046                         else
0000a7 c003      	RJMP _0xF
                 _0xE:
                 ; 0000 0047                         {
                 ; 0000 0048                             hour++;
0000a8 01f5      	MOVW R30,R10
0000a9 9631      	ADIW R30,1
0000aa 015f      	MOVW R10,R30
                 ; 0000 0049                         }
                 _0xF:
                 ; 0000 004A                     }
                 ; 0000 004B                     else
0000ab c003      	RJMP _0x10
                 _0xD:
                 ; 0000 004C                     {
                 ; 0000 004D                         min++;
0000ac 01f4      	MOVW R30,R8
0000ad 9631      	ADIW R30,1
0000ae 014f      	MOVW R8,R30
                 ; 0000 004E                     }
                 _0x10:
                 ; 0000 004F                 }
                 ; 0000 0050                 else
0000af c003      	RJMP _0x11
                 _0xC:
                 ; 0000 0051                 {
                 ; 0000 0052                     sec++;
0000b0 01f3      	MOVW R30,R6
0000b1 9631      	ADIW R30,1
0000b2 013f      	MOVW R6,R30
                 ; 0000 0053                 }
                 _0x11:
                 ; 0000 0054             }
                 ; 0000 0055             else
0000b3 c004      	RJMP _0x12
                 _0xB:
                 ; 0000 0056             {
                 ; 0000 0057                 milisec += 100;
0000b4 01f2      	MOVW R30,R4
0000b5 59ec      	SUBI R30,LOW(-100)
0000b6 4fff      	SBCI R31,HIGH(-100)
0000b7 012f      	MOVW R4,R30
                 ; 0000 0058             }
                 _0x12:
                 ; 0000 0059         }
                 ; 0000 005A 
                 ; 0000 005B         //"00 : 00 : 00 . 0"
                 ; 0000 005C         sprintf(buffer, "%02d : %02d : %02d . %d", hour, min, sec, milisec/100);
                 _0xA:
0000b8 d225      	RCALL SUBOPT_0x1
                 ; 0000 005D         lcd_clear();
                 ; 0000 005E         lcd_gotoxy(0, 0);
                 ; 0000 005F         lcd_puts(buffer);
                 ; 0000 0060     }
0000b9 cfca      	RJMP _0x4
                 ; 0000 0061 
                 ; 0000 0062 }
                 _0x13:
0000ba cfff      	RJMP _0x13
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000bb 93aa      	ST   -Y,R26
0000bc b3e8      	IN   R30,0x18
0000bd 70ef      	ANDI R30,LOW(0xF)
0000be 2fae      	MOV  R26,R30
0000bf 81e8      	LD   R30,Y
0000c0 7fe0      	ANDI R30,LOW(0xF0)
0000c1 2bea      	OR   R30,R26
0000c2 bbe8      	OUT  0x18,R30
0000c3 d242      	RCALL SUBOPT_0x3
0000c4 9ac2      	SBI  0x18,2
0000c5 d240      	RCALL SUBOPT_0x3
0000c6 98c2      	CBI  0x18,2
0000c7 d23e      	RCALL SUBOPT_0x3
0000c8 c07c      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000c9 93aa      	ST   -Y,R26
0000ca 81a8      	LD   R26,Y
0000cb dfef      	RCALL __lcd_write_nibble_G100
0000cc 81e8          ld    r30,y
0000cd 95e2          swap  r30
0000ce 83e8          st    y,r30
0000cf 81a8      	LD   R26,Y
0000d0 dfea      	RCALL __lcd_write_nibble_G100
                +
0000d1 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0000d2 958a     +DEC R24
0000d3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0000d4 c070      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000d5 93aa      	ST   -Y,R26
0000d6 81e8      	LD   R30,Y
0000d7 e0f0      	LDI  R31,0
0000d8 59e0      	SUBI R30,LOW(-__base_y_G100)
0000d9 4ffe      	SBCI R31,HIGH(-__base_y_G100)
0000da 81e0      	LD   R30,Z
0000db 81a9      	LDD  R26,Y+1
0000dc 0fae      	ADD  R26,R30
0000dd dfeb      	RCALL __lcd_write_data
0000de 80c9      	LDD  R12,Y+1
0000df 81e8      	LD   R30,Y
0000e0 93e0 0174 	STS  __lcd_y,R30
0000e2 9622      	ADIW R28,2
0000e3 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0000e4 e0a2      	LDI  R26,LOW(2)
0000e5 dfe3      	RCALL __lcd_write_data
0000e6 e0a3      	LDI  R26,LOW(3)
0000e7 d21c      	RCALL SUBOPT_0x2
0000e8 e0ac      	LDI  R26,LOW(12)
0000e9 dfdf      	RCALL __lcd_write_data
0000ea e0a1      	LDI  R26,LOW(1)
0000eb dfdd      	RCALL __lcd_write_data
0000ec e0a3      	LDI  R26,LOW(3)
0000ed d216      	RCALL SUBOPT_0x2
0000ee e0e0      	LDI  R30,LOW(0)
0000ef 93e0 0174 	STS  __lcd_y,R30
0000f1 2ece      	MOV  R12,R30
0000f2 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0000f3 93aa      	ST   -Y,R26
0000f4 81a8      	LD   R26,Y
0000f5 30aa      	CPI  R26,LOW(0xA)
0000f6 f021      	BREQ _0x2000005
0000f7 91e0 0175 	LDS  R30,__lcd_maxx
0000f9 16ce      	CP   R12,R30
0000fa f060      	BRLO _0x2000004
                 _0x2000005:
0000fb e0e0      	LDI  R30,LOW(0)
0000fc 93ea      	ST   -Y,R30
0000fd 91a0 0174 	LDS  R26,__lcd_y
0000ff 5faf      	SUBI R26,-LOW(1)
000100 93a0 0174 	STS  __lcd_y,R26
000102 dfd2      	RCALL _lcd_gotoxy
000103 81a8      	LD   R26,Y
000104 30aa      	CPI  R26,LOW(0xA)
000105 f409      	BRNE _0x2000007
000106 c03e      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
000107 94c3      	INC  R12
000108 9ac0      	SBI  0x18,0
000109 81a8      	LD   R26,Y
00010a dfbe      	RCALL __lcd_write_data
00010b 98c0      	CBI  0x18,0
00010c c038      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00010d d1fc      	RCALL SUBOPT_0x4
00010e 931a      	ST   -Y,R17
                 _0x2000008:
00010f 81a9      	LDD  R26,Y+1
000110 81ba      	LDD  R27,Y+1+1
000111 91ed      	LD   R30,X+
000112 83a9      	STD  Y+1,R26
000113 83ba      	STD  Y+1+1,R27
000114 2f1e      	MOV  R17,R30
000115 30e0      	CPI  R30,0
000116 f019      	BREQ _0x200000A
000117 2fa1      	MOV  R26,R17
000118 dfda      	RCALL _lcd_putchar
000119 cff5      	RJMP _0x2000008
                 _0x200000A:
00011a 8118      	LDD  R17,Y+0
00011b 9623      	ADIW R28,3
00011c 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00011d 93aa      	ST   -Y,R26
00011e b3e7      	IN   R30,0x17
00011f 6fe0      	ORI  R30,LOW(0xF0)
000120 bbe7      	OUT  0x17,R30
000121 9aba      	SBI  0x17,2
000122 9ab8      	SBI  0x17,0
000123 9ab9      	SBI  0x17,1
000124 98c2      	CBI  0x18,2
000125 98c0      	CBI  0x18,0
000126 98c1      	CBI  0x18,1
000127 81e8      	LD   R30,Y
000128 93e0 0175 	STS  __lcd_maxx,R30
00012a 58e0      	SUBI R30,-LOW(128)
                +
00012b 93e0 0172+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00012d 81e8      	LD   R30,Y
00012e 54e0      	SUBI R30,-LOW(192)
                +
00012f 93e0 0173+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000131 e1a4      	LDI  R26,LOW(20)
000132 d1d1      	RCALL SUBOPT_0x2
000133 d1d9      	RCALL SUBOPT_0x5
000134 d1d8      	RCALL SUBOPT_0x5
000135 d1d7      	RCALL SUBOPT_0x5
000136 e2a0      	LDI  R26,LOW(32)
000137 df83      	RCALL __lcd_write_nibble_G100
                +
000138 ec88     +LDI R24 , LOW ( 200 )
000139 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00013a 9701     +SBIW R24 , 1
00013b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00013c e2a8      	LDI  R26,LOW(40)
00013d df8b      	RCALL __lcd_write_data
00013e e0a4      	LDI  R26,LOW(4)
00013f df89      	RCALL __lcd_write_data
000140 e8a5      	LDI  R26,LOW(133)
000141 df87      	RCALL __lcd_write_data
000142 e0a6      	LDI  R26,LOW(6)
000143 df85      	RCALL __lcd_write_data
000144 df9f      	RCALL _lcd_clear
                 _0x2080002:
000145 9621      	ADIW R28,1
000146 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000147 d1c2      	RCALL SUBOPT_0x4
000148 d23b      	RCALL __SAVELOCR2
000149 d1ca      	RCALL SUBOPT_0x6
00014a 9612      	ADIW R26,2
00014b d227      	RCALL __GETW1P
00014c 9730      	SBIW R30,0
00014d f0f1      	BREQ _0x2020010
00014e d1c5      	RCALL SUBOPT_0x6
00014f d1c7      	RCALL SUBOPT_0x7
000150 018f      	MOVW R16,R30
000151 9730      	SBIW R30,0
000152 f061      	BREQ _0x2020012
                +
000153 3002     +CPI R16 , LOW ( 2 )
000154 e0e0     +LDI R30 , HIGH ( 2 )
000155 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000156 f070      	BRLO _0x2020013
000157 01f8      	MOVW R30,R16
000158 9731      	SBIW R30,1
000159 018f      	MOVW R16,R30
                +
00015a 81aa     +LDD R26 , Y + 2
00015b 81bb     +LDD R27 , Y + 2 + 1
00015c 9614     +ADIW R26 , 4
00015d 93ed     +ST X + , R30
00015e 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
00015f d1b4      	RCALL SUBOPT_0x6
000160 9612      	ADIW R26,2
000161 d1b8      	RCALL SUBOPT_0x8
000162 9731      	SBIW R30,1
000163 81ac      	LDD  R26,Y+4
000164 83a0      	STD  Z+0,R26
                 _0x2020013:
000165 d1ae      	RCALL SUBOPT_0x6
000166 d20c      	RCALL __GETW1P
000167 23ff      	TST  R31
000168 f012      	BRMI _0x2020014
000169 d1aa      	RCALL SUBOPT_0x6
00016a d1af      	RCALL SUBOPT_0x8
                 _0x2020014:
00016b c005      	RJMP _0x2020015
                 _0x2020010:
00016c d1a7      	RCALL SUBOPT_0x6
00016d efef      	LDI  R30,LOW(65535)
00016e efff      	LDI  R31,HIGH(65535)
00016f 93ed      	ST   X+,R30
000170 93fc      	ST   X,R31
                 _0x2020015:
000171 d219      	RCALL __LOADLOCR2
000172 9625      	ADIW R28,5
000173 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
000174 d195      	RCALL SUBOPT_0x4
000175 9726      	SBIW R28,6
000176 d209      	RCALL __SAVELOCR6
000177 e010      	LDI  R17,0
000178 85ac      	LDD  R26,Y+12
000179 85bd      	LDD  R27,Y+12+1
00017a e0e0      	LDI  R30,LOW(0)
00017b e0f0      	LDI  R31,HIGH(0)
00017c 93ed      	ST   X+,R30
00017d 93fc      	ST   X,R31
                 _0x2020016:
00017e 89ea      	LDD  R30,Y+18
00017f 89fb      	LDD  R31,Y+18+1
000180 9631      	ADIW R30,1
000181 8bea      	STD  Y+18,R30
000182 8bfb      	STD  Y+18+1,R31
000183 9731      	SBIW R30,1
000184 91e4      	LPM  R30,Z
000185 2f2e      	MOV  R18,R30
000186 30e0      	CPI  R30,0
000187 f409      	BRNE PC+2
000188 c0fe      	RJMP _0x2020018
000189 2fe1      	MOV  R30,R17
00018a 30e0      	CPI  R30,0
00018b f431      	BRNE _0x202001C
00018c 3225      	CPI  R18,37
00018d f411      	BRNE _0x202001D
00018e e011      	LDI  R17,LOW(1)
00018f c001      	RJMP _0x202001E
                 _0x202001D:
000190 d18f      	RCALL SUBOPT_0x9
                 _0x202001E:
000191 c0f4      	RJMP _0x202001B
                 _0x202001C:
000192 30e1      	CPI  R30,LOW(0x1)
000193 f4a1      	BRNE _0x202001F
000194 3225      	CPI  R18,37
000195 f411      	BRNE _0x2020020
000196 d189      	RCALL SUBOPT_0x9
000197 c0ed      	RJMP _0x20200CC
                 _0x2020020:
000198 e012      	LDI  R17,LOW(2)
000199 e040      	LDI  R20,LOW(0)
00019a e000      	LDI  R16,LOW(0)
00019b 322d      	CPI  R18,45
00019c f411      	BRNE _0x2020021
00019d e001      	LDI  R16,LOW(1)
00019e c0e7      	RJMP _0x202001B
                 _0x2020021:
00019f 322b      	CPI  R18,43
0001a0 f411      	BRNE _0x2020022
0001a1 e24b      	LDI  R20,LOW(43)
0001a2 c0e3      	RJMP _0x202001B
                 _0x2020022:
0001a3 3220      	CPI  R18,32
0001a4 f411      	BRNE _0x2020023
0001a5 e240      	LDI  R20,LOW(32)
0001a6 c0df      	RJMP _0x202001B
                 _0x2020023:
0001a7 c002      	RJMP _0x2020024
                 _0x202001F:
0001a8 30e2      	CPI  R30,LOW(0x2)
0001a9 f439      	BRNE _0x2020025
                 _0x2020024:
0001aa e050      	LDI  R21,LOW(0)
0001ab e013      	LDI  R17,LOW(3)
0001ac 3320      	CPI  R18,48
0001ad f411      	BRNE _0x2020026
0001ae 6800      	ORI  R16,LOW(128)
0001af c0d6      	RJMP _0x202001B
                 _0x2020026:
0001b0 c003      	RJMP _0x2020027
                 _0x2020025:
0001b1 30e3      	CPI  R30,LOW(0x3)
0001b2 f009      	BREQ PC+2
0001b3 c0d2      	RJMP _0x202001B
                 _0x2020027:
0001b4 3320      	CPI  R18,48
0001b5 f010      	BRLO _0x202002A
0001b6 332a      	CPI  R18,58
0001b7 f008      	BRLO _0x202002B
                 _0x202002A:
0001b8 c007      	RJMP _0x2020029
                 _0x202002B:
0001b9 e0aa      	LDI  R26,LOW(10)
0001ba 9f5a      	MUL  R21,R26
0001bb 2d50      	MOV  R21,R0
0001bc 2fe2      	MOV  R30,R18
0001bd 53e0      	SUBI R30,LOW(48)
0001be 0f5e      	ADD  R21,R30
0001bf c0c6      	RJMP _0x202001B
                 _0x2020029:
0001c0 2fe2      	MOV  R30,R18
0001c1 36e3      	CPI  R30,LOW(0x63)
0001c2 f439      	BRNE _0x202002F
0001c3 d163      	RCALL SUBOPT_0xA
0001c4 d165      	RCALL SUBOPT_0xB
0001c5 d161      	RCALL SUBOPT_0xA
0001c6 81a4      	LDD  R26,Z+4
0001c7 93aa      	ST   -Y,R26
0001c8 d165      	RCALL SUBOPT_0xC
0001c9 c0bb      	RJMP _0x2020030
                 _0x202002F:
0001ca 37e3      	CPI  R30,LOW(0x73)
0001cb f431      	BRNE _0x2020032
0001cc d167      	RCALL SUBOPT_0xD
0001cd d168      	RCALL SUBOPT_0xE
0001ce d16a      	RCALL SUBOPT_0xF
0001cf d0e9      	RCALL _strlen
0001d0 2f1e      	MOV  R17,R30
0001d1 c008      	RJMP _0x2020033
                 _0x2020032:
0001d2 37e0      	CPI  R30,LOW(0x70)
0001d3 f451      	BRNE _0x2020035
0001d4 d15f      	RCALL SUBOPT_0xD
0001d5 d160      	RCALL SUBOPT_0xE
0001d6 d162      	RCALL SUBOPT_0xF
0001d7 d0ec      	RCALL _strlenf
0001d8 2f1e      	MOV  R17,R30
0001d9 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0001da 6002      	ORI  R16,LOW(2)
0001db 770f      	ANDI R16,LOW(127)
0001dc e030      	LDI  R19,LOW(0)
0001dd c02e      	RJMP _0x2020036
                 _0x2020035:
0001de 36e4      	CPI  R30,LOW(0x64)
0001df f011      	BREQ _0x2020039
0001e0 36e9      	CPI  R30,LOW(0x69)
0001e1 f411      	BRNE _0x202003A
                 _0x2020039:
0001e2 6004      	ORI  R16,LOW(4)
0001e3 c002      	RJMP _0x202003B
                 _0x202003A:
0001e4 37e5      	CPI  R30,LOW(0x75)
0001e5 f429      	BRNE _0x202003C
                 _0x202003B:
0001e6 e2e6      	LDI  R30,LOW(_tbl10_G101*2)
0001e7 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0001e8 d155      	RCALL SUBOPT_0x10
0001e9 e015      	LDI  R17,LOW(5)
0001ea c00b      	RJMP _0x202003D
                 _0x202003C:
0001eb 35e8      	CPI  R30,LOW(0x58)
0001ec f411      	BRNE _0x202003F
0001ed 6008      	ORI  R16,LOW(8)
0001ee c003      	RJMP _0x2020040
                 _0x202003F:
0001ef 37e8      	CPI  R30,LOW(0x78)
0001f0 f009      	BREQ PC+2
0001f1 c093      	RJMP _0x2020071
                 _0x2020040:
0001f2 e3e0      	LDI  R30,LOW(_tbl16_G101*2)
0001f3 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
0001f4 d149      	RCALL SUBOPT_0x10
0001f5 e014      	LDI  R17,LOW(4)
                 _0x202003D:
0001f6 ff02      	SBRS R16,2
0001f7 c011      	RJMP _0x2020042
0001f8 d13b      	RCALL SUBOPT_0xD
0001f9 d13c      	RCALL SUBOPT_0xE
0001fa d146      	RCALL SUBOPT_0x11
0001fb 85ab      	LDD  R26,Y+11
0001fc 23aa      	TST  R26
0001fd f42a      	BRPL _0x2020043
0001fe 85ea      	LDD  R30,Y+10
0001ff 85fb      	LDD  R31,Y+10+1
000200 d156      	RCALL __ANEGW1
000201 d13f      	RCALL SUBOPT_0x11
000202 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000203 3040      	CPI  R20,0
000204 f011      	BREQ _0x2020044
000205 5f1f      	SUBI R17,-LOW(1)
000206 c001      	RJMP _0x2020045
                 _0x2020044:
000207 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000208 c003      	RJMP _0x2020046
                 _0x2020042:
000209 d12a      	RCALL SUBOPT_0xD
00020a d12b      	RCALL SUBOPT_0xE
00020b d135      	RCALL SUBOPT_0x11
                 _0x2020046:
                 _0x2020036:
00020c fd00      	SBRC R16,0
00020d c010      	RJMP _0x2020047
                 _0x2020048:
00020e 1715      	CP   R17,R21
00020f f470      	BRSH _0x202004A
000210 ff07      	SBRS R16,7
000211 c008      	RJMP _0x202004B
000212 ff02      	SBRS R16,2
000213 c004      	RJMP _0x202004C
000214 7f0b      	ANDI R16,LOW(251)
000215 2f24      	MOV  R18,R20
000216 5011      	SUBI R17,LOW(1)
000217 c001      	RJMP _0x202004D
                 _0x202004C:
000218 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000219 c001      	RJMP _0x202004E
                 _0x202004B:
00021a e220      	LDI  R18,LOW(32)
                 _0x202004E:
00021b d104      	RCALL SUBOPT_0x9
00021c 5051      	SUBI R21,LOW(1)
00021d cff0      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
00021e 2f31      	MOV  R19,R17
00021f ff01      	SBRS R16,1
000220 c015      	RJMP _0x202004F
                 _0x2020050:
000221 3030      	CPI  R19,0
000222 f091      	BREQ _0x2020052
000223 ff03      	SBRS R16,3
000224 c005      	RJMP _0x2020053
000225 81ee      	LDD  R30,Y+6
000226 81ff      	LDD  R31,Y+6+1
000227 9125      	LPM  R18,Z+
000228 d115      	RCALL SUBOPT_0x10
000229 c005      	RJMP _0x2020054
                 _0x2020053:
00022a 81ae      	LDD  R26,Y+6
00022b 81bf      	LDD  R27,Y+6+1
00022c 912d      	LD   R18,X+
00022d 83ae      	STD  Y+6,R26
00022e 83bf      	STD  Y+6+1,R27
                 _0x2020054:
00022f d0f0      	RCALL SUBOPT_0x9
000230 3050      	CPI  R21,0
000231 f009      	BREQ _0x2020055
000232 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000233 5031      	SUBI R19,LOW(1)
000234 cfec      	RJMP _0x2020050
                 _0x2020052:
000235 c046      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000236 e320      	LDI  R18,LOW(48)
000237 81ee      	LDD  R30,Y+6
000238 81ff      	LDD  R31,Y+6+1
000239 d13d      	RCALL __GETW1PF
00023a 87e8      	STD  Y+8,R30
00023b 87f9      	STD  Y+8+1,R31
00023c 81ee      	LDD  R30,Y+6
00023d 81ff      	LDD  R31,Y+6+1
00023e 9632      	ADIW R30,2
00023f d0fe      	RCALL SUBOPT_0x10
                 _0x202005A:
000240 85e8      	LDD  R30,Y+8
000241 85f9      	LDD  R31,Y+8+1
000242 85aa      	LDD  R26,Y+10
000243 85bb      	LDD  R27,Y+10+1
000244 17ae      	CP   R26,R30
000245 07bf      	CPC  R27,R31
000246 f048      	BRLO _0x202005C
000247 5f2f      	SUBI R18,-LOW(1)
000248 85a8      	LDD  R26,Y+8
000249 85b9      	LDD  R27,Y+8+1
00024a 85ea      	LDD  R30,Y+10
00024b 85fb      	LDD  R31,Y+10+1
00024c 1bea      	SUB  R30,R26
00024d 0bfb      	SBC  R31,R27
00024e d0f2      	RCALL SUBOPT_0x11
00024f cff0      	RJMP _0x202005A
                 _0x202005C:
000250 332a      	CPI  R18,58
000251 f028      	BRLO _0x202005D
000252 ff03      	SBRS R16,3
000253 c002      	RJMP _0x202005E
000254 5f29      	SUBI R18,-LOW(7)
000255 c001      	RJMP _0x202005F
                 _0x202005E:
000256 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000257 fd04      	SBRC R16,4
000258 c019      	RJMP _0x2020061
000259 3321      	CPI  R18,49
00025a f420      	BRSH _0x2020063
00025b 85a8      	LDD  R26,Y+8
00025c 85b9      	LDD  R27,Y+8+1
00025d 9711      	SBIW R26,1
00025e f409      	BRNE _0x2020062
                 _0x2020063:
00025f c009      	RJMP _0x20200CD
                 _0x2020062:
000260 1753      	CP   R21,R19
000261 f010      	BRLO _0x2020067
000262 ff00      	SBRS R16,0
000263 c001      	RJMP _0x2020068
                 _0x2020067:
000264 c011      	RJMP _0x2020066
                 _0x2020068:
000265 e220      	LDI  R18,LOW(32)
000266 ff07      	SBRS R16,7
000267 c00a      	RJMP _0x2020069
000268 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
000269 6100      	ORI  R16,LOW(16)
00026a ff02      	SBRS R16,2
00026b c006      	RJMP _0x202006A
00026c 7f0b      	ANDI R16,LOW(251)
00026d 934a      	ST   -Y,R20
00026e d0bf      	RCALL SUBOPT_0xC
00026f 3050      	CPI  R21,0
000270 f009      	BREQ _0x202006B
000271 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000272 d0ad      	RCALL SUBOPT_0x9
000273 3050      	CPI  R21,0
000274 f009      	BREQ _0x202006C
000275 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000276 5031      	SUBI R19,LOW(1)
000277 85a8      	LDD  R26,Y+8
000278 85b9      	LDD  R27,Y+8+1
000279 9712      	SBIW R26,2
00027a f008      	BRLO _0x2020059
00027b cfba      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
00027c ff00      	SBRS R16,0
00027d c007      	RJMP _0x202006D
                 _0x202006E:
00027e 3050      	CPI  R21,0
00027f f029      	BREQ _0x2020070
000280 5051      	SUBI R21,LOW(1)
000281 e2e0      	LDI  R30,LOW(32)
000282 93ea      	ST   -Y,R30
000283 d0aa      	RCALL SUBOPT_0xC
000284 cff9      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
000285 e010      	LDI  R17,LOW(0)
                 _0x202001B:
000286 cef7      	RJMP _0x2020016
                 _0x2020018:
000287 85ac      	LDD  R26,Y+12
000288 85bd      	LDD  R27,Y+12+1
000289 d0e9      	RCALL __GETW1P
00028a d0fc      	RCALL __LOADLOCR6
00028b 9664      	ADIW R28,20
00028c 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00028d 92ff      	PUSH R15
00028e 2ef8      	MOV  R15,R24
00028f 9726      	SBIW R28,6
000290 d0f1      	RCALL __SAVELOCR4
000291 d0b2      	RCALL SUBOPT_0x12
000292 9730      	SBIW R30,0
000293 f419      	BRNE _0x2020072
000294 efef      	LDI  R30,LOW(65535)
000295 efff      	LDI  R31,HIGH(65535)
000296 c01e      	RJMP _0x2080001
                 _0x2020072:
000297 01de      	MOVW R26,R28
000298 9616      	ADIW R26,6
000299 d0b9      	RCALL __ADDW2R15
00029a 018d      	MOVW R16,R26
00029b d0a8      	RCALL SUBOPT_0x12
00029c d0a1      	RCALL SUBOPT_0x10
00029d e0e0      	LDI  R30,LOW(0)
00029e 87e8      	STD  Y+8,R30
00029f 87e9      	STD  Y+8+1,R30
0002a0 01de      	MOVW R26,R28
0002a1 961a      	ADIW R26,10
0002a2 d0b0      	RCALL __ADDW2R15
0002a3 d0cf      	RCALL __GETW1P
0002a4 93fa      	ST   -Y,R31
0002a5 93ea      	ST   -Y,R30
0002a6 931a      	ST   -Y,R17
0002a7 930a      	ST   -Y,R16
0002a8 e4e7      	LDI  R30,LOW(_put_buff_G101)
0002a9 e0f1      	LDI  R31,HIGH(_put_buff_G101)
0002aa 93fa      	ST   -Y,R31
0002ab 93ea      	ST   -Y,R30
0002ac 01de      	MOVW R26,R28
0002ad 961a      	ADIW R26,10
0002ae dec5      	RCALL __print_G101
0002af 019f      	MOVW R18,R30
0002b0 81ae      	LDD  R26,Y+6
0002b1 81bf      	LDD  R27,Y+6+1
0002b2 e0e0      	LDI  R30,LOW(0)
0002b3 93ec      	ST   X,R30
0002b4 01f9      	MOVW R30,R18
                 _0x2080001:
0002b5 d0d3      	RCALL __LOADLOCR4
0002b6 962a      	ADIW R28,10
0002b7 90ff      	POP  R15
0002b8 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002b9 d050      	RCALL SUBOPT_0x4
0002ba 91a9          ld   r26,y+
0002bb 91b9          ld   r27,y+
0002bc 27ee          clr  r30
0002bd 27ff          clr  r31
                 strlen0:
0002be 916d          ld   r22,x+
0002bf 2366          tst  r22
0002c0 f011          breq strlen1
0002c1 9631          adiw r30,1
0002c2 cffb          rjmp strlen0
                 strlen1:
0002c3 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002c4 d045      	RCALL SUBOPT_0x4
0002c5 27aa          clr  r26
0002c6 27bb          clr  r27
0002c7 91e9          ld   r30,y+
0002c8 91f9          ld   r31,y+
                 strlenf0:
0002c9 9005      	lpm  r0,z+
0002ca 2000          tst  r0
0002cb f011          breq strlenf1
0002cc 9611          adiw r26,1
0002cd cffb          rjmp strlenf0
                 strlenf1:
0002ce 01fd          movw r30,r26
0002cf 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _buffer:
000160           	.BYTE 0x10
                 __base_y_G100:
000170           	.BYTE 0x4
                 __lcd_y:
000174           	.BYTE 0x1
                 __lcd_maxx:
000175           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x0:
0002d0 920a      	ST   -Y,R0
0002d1 921a      	ST   -Y,R1
0002d2 92fa      	ST   -Y,R15
0002d3 936a      	ST   -Y,R22
0002d4 937a      	ST   -Y,R23
0002d5 938a      	ST   -Y,R24
0002d6 939a      	ST   -Y,R25
0002d7 93aa      	ST   -Y,R26
0002d8 93ba      	ST   -Y,R27
0002d9 93ea      	ST   -Y,R30
0002da 93fa      	ST   -Y,R31
0002db b7ef      	IN   R30,SREG
0002dc 93ea      	ST   -Y,R30
0002dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x1:
0002de e6e0      	LDI  R30,LOW(_buffer)
0002df e0f1      	LDI  R31,HIGH(_buffer)
0002e0 93fa      	ST   -Y,R31
0002e1 93ea      	ST   -Y,R30
                +
0002e2 e3e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0002e3 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0002e4 93fa      	ST   -Y,R31
0002e5 93ea      	ST   -Y,R30
0002e6 01f5      	MOVW R30,R10
0002e7 2766      	CLR  R22
0002e8 2777      	CLR  R23
0002e9 d091      	RCALL __PUTPARD1
0002ea 01f4      	MOVW R30,R8
0002eb 2766      	CLR  R22
0002ec 2777      	CLR  R23
0002ed d08d      	RCALL __PUTPARD1
0002ee 01f3      	MOVW R30,R6
0002ef 2766      	CLR  R22
0002f0 2777      	CLR  R23
0002f1 d089      	RCALL __PUTPARD1
0002f2 01d2      	MOVW R26,R4
0002f3 e6e4      	LDI  R30,LOW(100)
0002f4 e0f0      	LDI  R31,HIGH(100)
0002f5 d06a      	RCALL __DIVW21U
0002f6 2766      	CLR  R22
0002f7 2777      	CLR  R23
0002f8 d082      	RCALL __PUTPARD1
0002f9 e180      	LDI  R24,16
0002fa df92      	RCALL _sprintf
0002fb 9664      	ADIW R28,20
0002fc dde7      	RCALL _lcd_clear
0002fd e0e0      	LDI  R30,LOW(0)
0002fe 93ea      	ST   -Y,R30
0002ff e0a0      	LDI  R26,LOW(0)
000300 ddd4      	RCALL _lcd_gotoxy
000301 e6a0      	LDI  R26,LOW(_buffer)
000302 e0b1      	LDI  R27,HIGH(_buffer)
000303 ce09      	RJMP _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
000304 e0b0      	LDI  R27,0
000305 c043      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
                +
000306 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000307 958a     +DEC R24
000308 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000309 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
00030a 93ba      	ST   -Y,R27
00030b 93aa      	ST   -Y,R26
00030c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x5:
00030d e3a0      	LDI  R26,LOW(48)
00030e ddac      	RCALL __lcd_write_nibble_G100
                +
00030f ec88     +LDI R24 , LOW ( 200 )
000310 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000311 9701     +SBIW R24 , 1
000312 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000313 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
000314 81aa      	LDD  R26,Y+2
000315 81bb      	LDD  R27,Y+2+1
000316 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
000317 9614      	ADIW R26,4
000318 d05a      	RCALL __GETW1P
000319 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
00031a 91ed      	LD   R30,X+
00031b 91fd      	LD   R31,X+
00031c 9631      	ADIW R30,1
00031d 93fe      	ST   -X,R31
00031e 93ee      	ST   -X,R30
00031f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x9:
000320 932a      	ST   -Y,R18
000321 85ad      	LDD  R26,Y+13
000322 85be      	LDD  R27,Y+13+1
000323 85ef      	LDD  R30,Y+15
000324 89f8      	LDD  R31,Y+15+1
000325 9509      	ICALL
000326 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
000327 89e8      	LDD  R30,Y+16
000328 89f9      	LDD  R31,Y+16+1
000329 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xB:
00032a 9734      	SBIW R30,4
00032b 8be8      	STD  Y+16,R30
00032c 8bf9      	STD  Y+16+1,R31
00032d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xC:
00032e 85ad      	LDD  R26,Y+13
00032f 85be      	LDD  R27,Y+13+1
000330 85ef      	LDD  R30,Y+15
000331 89f8      	LDD  R31,Y+15+1
000332 9509      	ICALL
000333 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000334 dff2      	RCALL SUBOPT_0xA
000335 cff4      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xE:
000336 89a8      	LDD  R26,Y+16
000337 89b9      	LDD  R27,Y+16+1
000338 cfde      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
000339 83ee      	STD  Y+6,R30
00033a 83ff      	STD  Y+6+1,R31
00033b 81ae      	LDD  R26,Y+6
00033c 81bf      	LDD  R27,Y+6+1
00033d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x10:
00033e 83ee      	STD  Y+6,R30
00033f 83ff      	STD  Y+6+1,R31
000340 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000341 87ea      	STD  Y+10,R30
000342 87fb      	STD  Y+10+1,R31
000343 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000344 01de      	MOVW R26,R28
000345 961c      	ADIW R26,12
000346 d00c      	RCALL __ADDW2R15
000347 d02b      	RCALL __GETW1P
000348 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000349 9610      	adiw r26,0
00034a f039      	breq __delay_ms1
                 __delay_ms0:
00034b 95a8      	wdr
                +
00034c ed80     +LDI R24 , LOW ( 0x7D0 )
00034d e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00034e 9701     +SBIW R24 , 1
00034f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000350 9711      	sbiw r26,1
000351 f7c9      	brne __delay_ms0
                 __delay_ms1:
000352 9508      	ret
                 
                 __ADDW2R15:
000353 2400      	CLR  R0
000354 0daf      	ADD  R26,R15
000355 1db0      	ADC  R27,R0
000356 9508      	RET
                 
                 __ANEGW1:
000357 95f1      	NEG  R31
000358 95e1      	NEG  R30
000359 40f0      	SBCI R31,0
00035a 9508      	RET
                 
                 __LNEGB1:
00035b 23ee      	TST  R30
00035c e0e1      	LDI  R30,1
00035d f009      	BREQ __LNEGB1F
00035e 27ee      	CLR  R30
                 __LNEGB1F:
00035f 9508      	RET
                 
                 __DIVW21U:
000360 2400      	CLR  R0
000361 2411      	CLR  R1
000362 e190      	LDI  R25,16
                 __DIVW21U1:
000363 0faa      	LSL  R26
000364 1fbb      	ROL  R27
000365 1c00      	ROL  R0
000366 1c11      	ROL  R1
000367 1a0e      	SUB  R0,R30
000368 0a1f      	SBC  R1,R31
000369 f418      	BRCC __DIVW21U2
00036a 0e0e      	ADD  R0,R30
00036b 1e1f      	ADC  R1,R31
00036c c001      	RJMP __DIVW21U3
                 __DIVW21U2:
00036d 60a1      	SBR  R26,1
                 __DIVW21U3:
00036e 959a      	DEC  R25
00036f f799      	BRNE __DIVW21U1
000370 01fd      	MOVW R30,R26
000371 01d0      	MOVW R26,R0
000372 9508      	RET
                 
                 __GETW1P:
000373 91ed      	LD   R30,X+
000374 91fc      	LD   R31,X
000375 9711      	SBIW R26,1
000376 9508      	RET
                 
                 __GETW1PF:
000377 9005      	LPM  R0,Z+
000378 91f4      	LPM  R31,Z
000379 2de0      	MOV  R30,R0
00037a 9508      	RET
                 
                 __PUTPARD1:
00037b 937a      	ST   -Y,R23
00037c 936a      	ST   -Y,R22
00037d 93fa      	ST   -Y,R31
00037e 93ea      	ST   -Y,R30
00037f 9508      	RET
                 
                 __SAVELOCR6:
000380 935a      	ST   -Y,R21
                 __SAVELOCR5:
000381 934a      	ST   -Y,R20
                 __SAVELOCR4:
000382 933a      	ST   -Y,R19
                 __SAVELOCR3:
000383 932a      	ST   -Y,R18
                 __SAVELOCR2:
000384 931a      	ST   -Y,R17
000385 930a      	ST   -Y,R16
000386 9508      	RET
                 
                 __LOADLOCR6:
000387 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000388 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000389 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00038a 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00038b 8119      	LDD  R17,Y+1
00038c 8108      	LD   R16,Y
00038d 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  18 r1 :   7 r2 :   0 r3 :   0 r4 :   6 r5 :   2 r6 :   6 r7 :   2 
r8 :   6 r9 :   2 r10:   5 r11:   2 r12:   4 r13:   5 r14:   0 r15:   6 
r16:  32 r17:  22 r18:  29 r19:   8 r20:   9 r21:  17 r22:  11 r23:   7 
r24:  21 r25:   9 r26:  98 r27:  30 r28:  14 r29:   1 r30: 196 r31:  63 
x  :  19 y  : 153 z  :  15 
Registers used: 32 out of 35 (91.4%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   4 
adiw  :  24 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  20 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  34 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :   5 
cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :  26 
cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :  11 
cpc   :   6 cpi   :  33 cpse  :   0 dec   :   4 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 in    :   3 
inc   :   1 ld    :  36 ldd   :  61 ldi   : 105 lds   :   2 lpm   :  14 
lsl   :   1 lsr   :   0 mov   :  17 movw  :  31 mul   :   1 muls  :   0 
mulsu :   0 neg   :   2 nop   :   0 or    :   1 ori   :   7 out   :  13 
pop   :   1 push  :   1 rcall : 109 ret   :  34 reti  :   1 rjmp  :  89 
rol   :   3 ror   :   0 sbc   :   2 sbci  :   3 sbi   :   5 sbic  :   0 
sbis  :   0 sbiw  :  19 sbr   :   1 sbrc  :   2 sbrs  :  10 sec   :   0 
seh   :   0 sei   :   1 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  59 std   :  19 
sts   :   6 sub   :   2 subi  :  18 swap  :   1 tst   :   5 wdr   :   1 

Instructions used: 57 out of 114 (50.0%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00071c   1768     52   1820    8192  22.2%
[.dseg] 0x000060 0x000176      0     22     22    1024   2.1%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 10 warnings
